#!/bin/bash
#=====================================================================================
# Arch Linux Hyprland Installation Script
# Generated by Arch Hyprland Script Generator
# Based on JaKooLit/Arch-Hyprland and mylinuxforwork/dotfiles
#=====================================================================================

# Terminal colors
GREEN="\033[1;32m"
BLUE="\033[1;34m"
RED="\033[1;31m"
YELLOW="\033[1;33m"
RESET="\033[0m"

# Function to print colored text
print_color() {
  local color=$1
  local text=$2
  echo -e "${color}${text}${RESET}"
}

print_color "$BLUE" "\n====================================================="
print_color "$BLUE" "      Arch Linux Hyprland Installation Script       "
print_color "$BLUE" "=====================================================\n"

# Check if script is run as root
if [ "$(id -u)" = 0 ]; then
  print_color "$RED" "ERROR: This script should not be run as root!"
  exit 1
fi

# Check if running on Arch Linux
if [ ! -f /etc/arch-release ]; then
  print_color "$RED" "ERROR: This script is designed for Arch Linux only!"
  exit 1
fi

print_color "$GREEN" "Beginning installation..."
print_color "$YELLOW" "This script will install Hyprland and related components.\n"

# Update system first
print_color "$BLUE" "Updating system packages..."
sudo pacman -Syu --noconfirm

# Install required dependencies
print_color "$BLUE" "Installing base dependencies..."
sudo pacman -S --needed --noconfirm base-devel git curl wget

# Install yay if not installed
if ! command -v yay &> /dev/null; then
  print_color "$BLUE" "Installing yay AUR helper..."
  git clone https://aur.archlinux.org/yay-bin.git
  cd yay-bin
  makepkg -si --noconfirm
  cd ..
  rm -rf yay-bin
fi

# Install Hyprland and basic packages
print_color "$BLUE" "Installing Hyprland and essential packages..."

# Installing full package set
yay -S --needed --noconfirm hyprland xdg-desktop-portal-hyprland \
  waybar wofi dunst polkit-kde-agent swww kitty foot \
  grim slurp wl-clipboard cliphist \
  brightnessctl pavucontrol pamixer bluez bluez-utils blueman \
  network-manager-applet thunar thunar-archive-plugin file-roller \
  btop fastfetch mpv imv firefox nautilus gnome-disk-utility \
  wlogout swaylock-effects papirus-icon-theme ttf-jetbrains-mono-nerd

# Installing NVIDIA specific packages
print_color "$BLUE" "Installing NVIDIA specific packages and configurations..."
yay -S --needed --noconfirm nvidia-dkms nvidia-utils lib32-nvidia-utils \
  nvidia-settings libva libva-nvidia-driver-git

# Create NVIDIA specific configurations
sudo mkdir -p /etc/modprobe.d
echo "options nvidia-drm modeset=1" | sudo tee /etc/modprobe.d/nvidia.conf

# Add Hyprland NVIDIA environment variables
mkdir -p ~/.config/hypr
cat > ~/.config/hypr/nvidia.conf << EOL
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = WLR_NO_HARDWARE_CURSORS,1
env = WLR_DRM_NO_ATOMIC,1
EOL

# Setting up hybrid GPU configuration for laptops
print_color "$BLUE" "Configuring for hybrid GPU setup..."
yay -S --needed --noconfirm envycontrol
sudo systemctl enable nvidia-suspend.service nvidia-hibernate.service

# Create switching script
mkdir -p ~/bin
cat > ~/bin/gpu-switch.sh << EOL
#!/bin/bash
echo "GPU Switching Utility"
echo "1. Switch to Integrated GPU"
echo "2. Switch to NVIDIA GPU"
echo "3. Switch to Hybrid Mode"
read -p "Select an option: " choice

case $choice in
  1) sudo envycontrol -s integrated ;;
  2) sudo envycontrol -s nvidia ;;
  3) sudo envycontrol -s hybrid ;;
  *) echo "Invalid option" ;;
esac
EOL
chmod +x ~/bin/gpu-switch.sh

print_color "$YELLOW" "Added GPU switching utility at ~/bin/gpu-switch.sh"

# Installing Waydroid for Android app support
print_color "$BLUE" "Installing Waydroid..."
yay -S --needed --noconfirm waydroid

# Enable required services
sudo systemctl enable --now waydroid-container

print_color "$YELLOW" "Waydroid installed. After reboot, initialize with: waydroid init"

# Installing combined dotfiles (best of both repositories)
print_color "$BLUE" "Setting up combined dotfiles configuration..."

# Create necessary directories
mkdir -p ~/.config/hypr
mkdir -p ~/.config/waybar
mkdir -p ~/.config/wofi
mkdir -p ~/.config/dunst
mkdir -p ~/.config/kitty

# Download and install wallpapers
git clone https://github.com/JaKooLit/Wallpaper.git
mkdir -p ~/Pictures/wallpapers
cp -r Wallpaper/* ~/Pictures/wallpapers/
rm -rf Wallpaper

# Get JaKooLit's Hyprland configuration
curl -o ~/.config/hypr/hyprland.conf https://raw.githubusercontent.com/JaKooLit/Hyprland-Dots/main/config/hypr/hyprland.conf
curl -o ~/.config/hypr/hyprtheme.conf https://raw.githubusercontent.com/JaKooLit/Hyprland-Dots/main/config/hypr/hyprtheme.conf

# Get mylinuxforwork's waybar configuration (more minimal)
curl -o ~/.config/waybar/config https://raw.githubusercontent.com/mylinuxforwork/dotfiles/main/config/waybar/config
curl -o ~/.config/waybar/style.css https://raw.githubusercontent.com/mylinuxforwork/dotfiles/main/config/waybar/style.css

# Get kitty configuration
curl -o ~/.config/kitty/kitty.conf https://raw.githubusercontent.com/JaKooLit/Hyprland-Dots/main/config/kitty/kitty.conf

# Create combined keybindings
cat > ~/.config/hypr/keybinds.conf << EOL
# Combined keybindings from JaKooLit and mylinuxforwork

# Terminal
bind = SUPER, RETURN, exec, kitty

# Application launcher
bind = SUPER, SPACE, exec, wofi --show drun

# Window management
bind = SUPER, Q, killactive
bind = SUPER, F, fullscreen
bind = SUPER, T, togglefloating

# Window navigation
bind = SUPER, left, movefocus, l
bind = SUPER, right, movefocus, r
bind = SUPER, up, movefocus, u
bind = SUPER, down, movefocus, d

# Workspace switching
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9

# Move window to workspace
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9

# Special keys
bind = , XF86AudioRaiseVolume, exec, pamixer -i 5
bind = , XF86AudioLowerVolume, exec, pamixer -d 5
bind = , XF86AudioMute, exec, pamixer -t
bind = , XF86MonBrightnessUp, exec, brightnessctl set +5%
bind = , XF86MonBrightnessDown, exec, brightnessctl set 5%-
EOL

print_color "$GREEN" "Combined dotfiles installed successfully!"

# Final setup and cleanup
print_color "$BLUE" "Performing final setup..."

# Enable important services
sudo systemctl enable NetworkManager

# Create autostart directory
mkdir -p ~/.config/autostart

# Final message
print_color "$GREEN" "\n====================================================="
print_color "$GREEN" "          Installation Completed Successfully!         "
print_color "$GREEN" "=====================================================\n"

print_color "$YELLOW" "IMPORTANT: Please reboot your system to start using Hyprland."
print_color "$YELLOW" "After reboot, select Hyprland at the login screen.\n"

read -p "Would you like to reboot now? (y/n): " choice
if [[ "$choice" =~ ^[Yy]$ ]]; then
  print_color "$BLUE" "Rebooting system..."
  sudo reboot
else
  print_color "$BLUE" "Please reboot manually when ready."
fi

# End of script
